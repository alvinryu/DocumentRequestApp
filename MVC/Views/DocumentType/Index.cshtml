@{
    Layout = "_Layout";
    ViewData["Title"] = "Document Type";
}

<div class="p-3">
    <div class="row">
        <h2 class="page-header">
            Data
            <small>Document Type</small>
        </h2>
    </div>
    <div>
        <button id="add" class="mb-3 btn btn-primary text-center" data-toggle="modal" data-target="#modal" onclick="resetUpdate()">
            <i class="fas fa-user-plus"></i> Add Document Type
        </button>
    </div>
    <div>
        <table id="table_id" class="table table-sm table-striped table-bordered m-2">
            <thead>
                <tr>
                    <th>No</th>
                    <th>Type ID</th>
                    <th>Type Name</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
            <tfoot>
                <tr>
                    <th>No</th>
                    <th>Type ID</th>
                    <th>Type Name</th>
                    <th>Actions</th>
                </tr>
            </tfoot>
        </table>
    </div>
</div>

<!-- Add/Edit DocumentType Modal-->
<div class="modal fade" id="modal" tabindex="-1" aria-labelledby="modal" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Document Type</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span>x</span></button>
            </div>
            <div class="modal-body">
                <form id="docTypeForm" name="docTypeForm">
                    <div class="row">
                        <div class="col">
                            <div class="form-group">
                                <span id="spanID"></span>
                                <label for="typeName" class="col-form-label">Type Name:</label>
                                <input type="text" class="form-control" id="typeName" name="typeName">
                            </div>
                        </div>
                    </div>
                </form>
                <div class="modal-footer">
                    <button class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary" form="docTypeForm">Submit</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts
{
    <script>
        var isUpdate = 0;
        $(document).ready(function () {
            var t = $('#table_id').DataTable({
                dom: 'Bfrtip',
                buttons: [
                    {
                        extend: 'csv',
                        exportOptions: {
                            columns: [1, 2]
                        }
                    },
                    {
                        extend: 'excel',
                        exportOptions: {
                            columns: [1, 2]
                        }
                    },
                    {
                        extend: 'pdfHtml5',
                        orientation: 'landscape',
                        pageSize: 'LEGAL',
                        pageSize: 'A4', //formato stampa
                        alignment: "center",
                        exportOptions: {
                            columns: [1, 2]
                        },
                        customize: function (doc) {
                            doc.styles.tableHeader.alignment = 'left'; //giustifica a sinistra titoli colonne
                            doc.content[1].table.widths = [90, 90, 90, 90, 90, 90, 90, 90]; //costringe le colonne ad occupare un dato spazio per gestire il baco del 100% width che non si concretizza mai
                        }
                    },
                ],
                "filter": true,
                "orderMulti": false,
                "ajax": {
                    "url": "DocumentType/Get",
                    "type": "get",
                    "data": "result",
                    "dataType": "json",
                    //"beforeSend": function (xhr) {
                    //    xhr.setRequestHeader('Authorization', sessionStorage.token);
                    //}
                },
                "columnDefs": [
                    {
                        "targets": [1],
                        "visible": false,
                    },
                    {
                        "targets": [3],
                        "orderable": false,
                        "searchable": false
                    }
                ],
                "columns": [
                    {
                        "data": 'id',
                        "defaultContent": ''
                    },
                    { "data": 'typeID' },
                    { "data": 'typeName' },
                    {
                        "data": 'id',
                        "render": function (data, type, row, meta) {
                            return '<a class="btn btn-success" data-toggle="tooltip" data-placement="top" title="Edit" onclick="Get(\'' + row['typeID'] + '\')"><i class ="far fa-edit"></i> Edit</a> ' +
                                '<button class="btn btn-danger" data-toggle="tooltip" data-placement="top" title="Delete" onclick="Delete(\'' + row['typeID'] + '\')"><i class ="far fa-trash-alt"></i> Delete</button>'
                        }
                    }
                ]
            });
            t.on('order.dt search.dt', function () {
                t.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                    t.cell(cell).invalidate('dom');
                });
            }).draw();
        });

        $("#docTypeForm").validate({
            rules: {
                typeName: {
                    required: true
                }
            },
            submitHandler: function (docTypeForm) {
                var form = $(docTypeForm);
                var urlString;
                if (isUpdate == 1)
                    urlString = "documenttype/put"
                else
                    urlString = "documenttype/post"
                $.ajax({
                    type: "POST",
                    url: urlString,
                    data: form.serialize(),
                    //"beforeSend": function (xhr) {
                    //    xhr.setRequestHeader('Authorization', sessionStorage.token);
                    //},
                    success: function (data) {
                        $('#modal').modal('hide');
                        Swal.fire(
                            'Saved!',
                            'Your data has been saved.',
                            'success'
                        )
                        $('#table_id').DataTable().ajax.reload();
                    },
                    error: function (error) {
                        alert('error;');
                        $('#modal').modal('hide');
                        $('#table_id').DataTable().ajax.reload();
                    },
                });
            }
        });

        function Get(typeID) {
            //debugger;
            $("#spanID").append("<input type='hidden' id='typeID' name='typeID' />");
            $.ajax({
                url: "documenttype/GetById",
                type: "GET",
                data: { 'key': typeID },
                //"beforeSend": function (xhr) {
                //    xhr.setRequestHeader('Authorization', sessionStorage.token);
                //},
                success: function (data) {
                    $('#modal').modal('show');
                    var result = (JSON.parse(JSON.stringify(data))).data;
                    $('#typeID').val(result.typeID);
                    $('#typeName').val(result.typeName);
                    isUpdate = 1;
                }
            });
        }

        function resetUpdate() {
            isUpdate = 0;
            $("#spanID").empty();
            $('#docTypeForm').trigger('reset');
        }

        function Delete(typeID) {
            swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: "POST",
                        url: "documenttype/Delete",
                        data: { 'key': typeID },
                        //"beforeSend": function (xhr) {
                        //    xhr.setRequestHeader('Authorization', sessionStorage.token);
                        //},
                        success: function (data) {
                            Swal.fire(
                                'Deleted!',
                                'Your data has been deleted.',
                                'success'
                            )
                            $('#table_id').DataTable().ajax.reload();
                        },
                        error: function (error) {
                            alert('error;');
                            $('#table_id').DataTable().ajax.reload();
                        },
                    });
                }
            })
        }
    </script>
}